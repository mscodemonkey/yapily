<?php
/**
 * ConsentsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yapily
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Yapily API
 *
 * To access endpoints that require authentication, use your application key and secret created in the Dashboard (https://dashboard.yapily.com)
 *
 * OpenAPI spec version: 0.0.161
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.10
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yapily;

use \Yapily\Configuration;
use \Yapily\ApiException;
use \Yapily\ObjectSerializer;

/**
 * ConsentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yapily
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConsentsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addConsentUsingPOST
     *
     * Post consent.
     *
     */
    public function testAddConsentUsingPOST()
    {
    }

    /**
     * Test case for createConsentWithCodeUsingPOST
     *
     * Post auth-code and auth-state.
     *
     */
    public function testCreateConsentWithCodeUsingPOST()
    {
    }

    /**
     * Test case for deleteUsingDELETE
     *
     * Delete consent.
     *
     */
    public function testDeleteUsingDELETE()
    {
    }

    /**
     * Test case for getConsentByIdUsingGET
     *
     * Get consent.
     *
     */
    public function testGetConsentByIdUsingGET()
    {
    }

    /**
     * Test case for getConsentBySingleAccessConsentUsingPOST
     *
     * Post one time token.
     *
     */
    public function testGetConsentBySingleAccessConsentUsingPOST()
    {
    }

    /**
     * Test case for getConsentsUsingGET
     *
     * Get consents sorted by creation date.
     *
     */
    public function testGetConsentsUsingGET()
    {
    }

    /**
     * Test case for getUserConsentsUsingGET
     *
     * Get latest user consents.
     *
     */
    public function testGetUserConsentsUsingGET()
    {
    }
}
